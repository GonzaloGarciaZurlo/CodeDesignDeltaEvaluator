@startuml
participant CLI
participant main
participant "API" as API
participant "Puml Generator" as PumlGenerator
participant "Puml Parser" as PumlParser
participant "Filter Parser" as FilterParser
participant "Puml Observer" as PumlObserver
participant "RelationshipsDB" as relationshipsDB
participant "Expression Evaluator" as ExpressionEvaluator
participant "DesignDB" as designDB
participant "Metric Calulator" as MetricCalculator
participant "Metric API" as MetricAPI
participant "Result Observer" as ResultObserver
participant "MetricsDB" as metricsDB
participant "Metrics Evaluator" as MetricsEvaluator
participant "Veredict" as Veredict

CLI -> main: config

API -> main: puml_generator

API -> main: puml_parser

API -> main: filter_Parser

API -> main: puml_observer

API -> main: metric_calculator

API -> main: result_observer

main -> PumlGenerator: generate_puml()

PumlGenerator -> main: file.puml

main -> PumlObserver: create_observer()

main -> PumlObserver: set_mode(MODE)

main -> PumlParser: parse(file.puml, observer)

activate PumlParser

loop
    PumlParser -> FilterParser: relationship
    FilterParser -> PumlObserver: relationship
    PumlObserver -> relationshipsDB: store\nrelationship
end
deactivate PumlParser

main -> MetricCalculator:(result_observer)
main -> MetricCalculator:(expression_evaluator)
main -> MetricCalculator:(designDB)
main -> MetricCalculator:(metricsAPI) 

activate MetricCalculator

loop
    ExpressionEvaluator -> relationshipsDB: queries
    ExpressionEvaluator -> MetricCalculator: result
    designDB -> MetricCalculator: design_graph
    MetricCalculator -> MetricAPI: save_metrics()
    MetricCalculator -> ResultObserver: on_result_found()
    ResultObserver -> metricsDB: store\nmetrics
end
deactivate MetricCalculator



MetricsEvaluator -> metricsDB: metrics
MetricsEvaluator -> Veredict: veredict

@enduml

