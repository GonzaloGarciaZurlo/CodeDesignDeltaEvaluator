language: cypher

per-class-metrics:
  - metric: abstracts_deps_count
    query: |
      MATCH (c {name: $class_name})-[r]->(dependent:Abstract)
      RETURN count(r) AS metric
  - metric: concrete_deps_count
    query: |
      MATCH (c {name: $class_name})-[r]->(dependent:Class)
      RETURN count(r) AS metric
  - metric: afferent_count
    query: |
      MATCH (external)-[r]->(c {name: $class_name})
      RETURN count(r) AS metric
  - metric: efferent_count
    query: |
      MATCH (c {name: $class_name})-[r]->(external)
      RETURN count(r) AS metric
  - metric: deletes_classes
    query: |
      MATCH (a), (b)
      WHERE a.name = $class1 AND b.name = $class2
      CREATE (a)-[r:{relation}] -> (b)
      MATCH (a)-[:REL]->(aNodes)
      WITH a, collect(aNodes) AS aNodeList
      MATCH (b)-[:REL]->(bNodes)
      WITH aNodeList, collect(bNodes) AS bNodeList
      WITH [node IN aNodeList WHERE NOT node IN bNodeList] AS metric
      RETURN metric
      DELETE r

general-metrics:
  - metric: all_classes
    query: |
      MATCH (c) RETURN c.name AS name
  - metric: all_relations
    query: |
      MATCH (c {name: $class_name})-[r]->(dependent)
      RETURN type(r) AS relation, dependent.name AS dependent